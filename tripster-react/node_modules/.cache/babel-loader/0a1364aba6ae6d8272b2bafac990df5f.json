{"ast":null,"code":"import _classCallCheck from \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/src/App.js\";\nimport { Map, InfoWindow, Marker, GoogleApiWrapper, Polygon, Polyline } from 'google-maps-react';\nimport React from 'react';\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport { geocodeByAddress, geocodeByPlaceId, getLatLng } from 'react-places-autocomplete';\nimport './App.css';\nexport var MapContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MapContainer, _React$Component);\n\n  function MapContainer(props) {\n    var _this;\n\n    _classCallCheck(this, MapContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapContainer).call(this, props));\n\n    _this.handleChangeOrigin = function (origin_address) {\n      _this.setState({\n        origin_address: origin_address\n      });\n    };\n\n    _this.handleSelectOrigin = function (origin_address) {\n      geocodeByAddress(origin_address).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        return _this.setState({\n          origin_obj: latLng\n        });\n      }).catch(function (error) {\n        return console.error('Error', error);\n      });\n\n      _this.setState({\n        origin_address: origin_address\n      });\n    };\n\n    _this.handleChangeDestination = function (destination_address) {\n      _this.setState({\n        destination_address: destination_address\n      });\n    };\n\n    _this.handleSelectDestination = function (destination_address) {\n      geocodeByAddress(destination_address).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        return _this.setState({\n          destination_obj: latLng\n        });\n      }).catch(function (error) {\n        return console.error('Error', error);\n      });\n\n      _this.setState({\n        destination_address: destination_address\n      });\n    };\n\n    _this.state = {\n      origin_address: '',\n      destination_address: '',\n      origin_obj: {},\n      destination_obj: {}\n    };\n    return _this;\n  }\n\n  _createClass(MapContainer, [{\n    key: \"calculate_distance\",\n    value: function calculate_distance() {\n      console.log(this.state.origin_obj);\n      console.log(this.state.destination_obj);\n      var origin_lat = this.state.origin_obj.lat;\n      var origin_lon = this.state.origin_obj.lng;\n      var destination_lat = this.state.destination_obj.lat;\n      var destination_lon = this.state.destination_obj.lng;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // const triangleCoords = [\n      //     {lat: 37.759703, lng: -122.428093},\n      //     {lat: 37.7614169, lng: -122.4240931},\n      //\n      // ];\n      var triangleCoords = [{\n        lat: 37.759703,\n        lng: -122.428093\n      }, {\n        lat: 37.7612896,\n        lng: -122.4283997\n      }, {\n        lat: 37.7615595,\n        lng: -122.4241079\n      }, {\n        lat: 37.7614169,\n        lng: -122.4240931\n      }];\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(PlacesAutocomplete, {\n        value: this.state.origin_address,\n        onChange: this.handleChangeOrigin,\n        onSelect: this.handleSelectOrigin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps({\n          placeholder: 'Origin',\n          className: 'location-search-input'\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, suggestion.description));\n        })));\n      }), React.createElement(PlacesAutocomplete, {\n        value: this.state.destination_address,\n        onChange: this.handleChangeDestination,\n        onSelect: this.handleSelectDestination,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, function (_ref2) {\n        var getInputProps = _ref2.getInputProps,\n            suggestions = _ref2.suggestions,\n            getSuggestionItemProps = _ref2.getSuggestionItemProps,\n            loading = _ref2.loading;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({}, getInputProps({\n          placeholder: 'Destination',\n          className: 'location-search-input'\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131\n          },\n          __self: this\n        }, loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          },\n          __self: this\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 142\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 148\n            },\n            __self: this\n          }, suggestion.description));\n        })));\n      }), React.createElement(\"button\", {\n        className: \"button\",\n        onClick: function onClick() {\n          return _this2.calculate_distance();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \"Calculate\"), React.createElement(Map, {\n        google: this.props.google,\n        zoom: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Marker, {\n        name: 'Dolores park',\n        position: {\n          lat: 37.759703,\n          lng: -122.428093\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }), React.createElement(Marker, {\n        name: 'Tartine Bakery',\n        position: {\n          lat: 37.7614169,\n          lng: -122.4240931\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Polyline, {\n        path: triangleCoords,\n        strokeColor: \"#0000FF\",\n        strokeOpacity: 4,\n        strokeWeight: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return MapContainer;\n}(React.Component);\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyChbG4vc4a01alWP7RYrMvWd911uhGzOdo\\n\"\n})(MapContainer);","map":{"version":3,"sources":["/Users/kg2alex/Documents/GitHub/Tripster/tripster-react/src/App.js"],"names":["Map","InfoWindow","Marker","GoogleApiWrapper","Polygon","Polyline","React","PlacesAutocomplete","geocodeByAddress","geocodeByPlaceId","getLatLng","MapContainer","props","handleChangeOrigin","origin_address","setState","handleSelectOrigin","then","results","latLng","origin_obj","catch","error","console","handleChangeDestination","destination_address","handleSelectDestination","destination_obj","state","log","origin_lat","lat","origin_lon","lng","destination_lat","destination_lon","triangleCoords","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","calculate_distance","google","Component","apiKey"],"mappings":"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","sourcesContent":["import {Map, InfoWindow, Marker, GoogleApiWrapper, Polygon, Polyline} from 'google-maps-react';\nimport React from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport {\n    geocodeByAddress,\n    geocodeByPlaceId,\n    getLatLng,\n} from 'react-places-autocomplete';\nimport './App.css'\n\nexport class MapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            origin_address: '',\n            destination_address: '',\n            origin_obj:{},\n            destination_obj:{}\n        };\n    }\n    handleChangeOrigin = origin_address => {\n        this.setState({\n            origin_address\n        });\n    };\n\n    handleSelectOrigin = origin_address => {\n\n        geocodeByAddress(origin_address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => this.setState({origin_obj : latLng}))\n            .catch(error => console.error('Error', error));\n        this.setState({origin_address})\n    };\n\n    handleChangeDestination = destination_address => {\n        this.setState({\n            destination_address\n        });\n    };\n\n    handleSelectDestination = destination_address => {\n\n        geocodeByAddress(destination_address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => this.setState({destination_obj: latLng}))\n            .catch(error => console.error('Error', error));\n        this.setState({destination_address})\n    };\n\n    calculate_distance() {\n        console.log(this.state.origin_obj);\n        console.log(this.state.destination_obj);\n\n        const origin_lat = this.state.origin_obj.lat;\n        const origin_lon = this.state.origin_obj.lng;\n        const destination_lat = this.state.destination_obj.lat;\n        const destination_lon = this.state.destination_obj.lng;\n    }\n\n    render() {\n        // const triangleCoords = [\n        //     {lat: 37.759703, lng: -122.428093},\n        //     {lat: 37.7614169, lng: -122.4240931},\n        //\n        // ];\n        const triangleCoords = [\n            {lat: 37.759703, lng: -122.428093},\n            {lat: 37.7612896, lng: -122.4283997},\n            {lat: 37.7615595, lng: -122.4241079},\n            {lat: 37.7614169, lng: -122.4240931},\n\n        ];\n\n        return (\n            <div>\n\n                <PlacesAutocomplete\n                    value={this.state.origin_address}\n                    onChange={this.handleChangeOrigin}\n                    onSelect={this.handleSelectOrigin}\n                >\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <input\n                                {...getInputProps({\n                                    placeholder: 'Origin',\n                                    className: 'location-search-input',\n                                })}\n                            />\n                            <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n                                {suggestions.map(suggestion => {\n                                    const className = suggestion.active\n                                        ? 'suggestion-item--active'\n                                        : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, {\n                                                className,\n                                                style,\n                                            })}\n                                        >\n                                            <span>{suggestion.description}</span>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n\n                <PlacesAutocomplete\n                    value={this.state.destination_address}\n                    onChange={this.handleChangeDestination}\n                    onSelect={this.handleSelectDestination}\n                >\n                    {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                        <div>\n                            <input\n                                {...getInputProps({\n                                    placeholder: 'Destination',\n                                    className: 'location-search-input',\n                                })}\n\n                            />\n                            <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n                                {suggestions.map(suggestion => {\n                                    const className = suggestion.active\n                                        ? 'suggestion-item--active'\n                                        : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                        ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                        : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                    return (\n                                        <div\n                                            {...getSuggestionItemProps(suggestion, {\n                                                className,\n                                                style,\n                                            })}\n                                        >\n                                            <span>{suggestion.description}</span>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </PlacesAutocomplete>\n\n\n\n                <button className=\"button\" onClick={() => this.calculate_distance()}>Calculate</button>\n\n                <Map google={this.props.google} zoom={14}>\n                    <Marker\n                        name={'Dolores park'}\n                        position={{lat: 37.759703, lng: -122.428093}} />\n                    <Marker\n                        name={'Tartine Bakery'}\n                        position={{lat: 37.7614169, lng: -122.4240931}} />\n\n\n                    <Polyline\n                        path={triangleCoords}\n                        strokeColor=\"#0000FF\"\n                        strokeOpacity={4}\n                        strokeWeight={10} />\n                </Map>\n            </div>\n\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyChbG4vc4a01alWP7RYrMvWd911uhGzOdo\\n\")\n})(MapContainer)\n"]},"metadata":{},"sourceType":"module"}