{"version":3,"sources":["dependency.js","components/Trips.js","components/Spotifunk.js","components/Steps.js","components/App.js","components/Home.js","serviceWorker.js","index.js"],"names":["backendURL","Trips","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","trips","inherits","createClass","key","value","options","method","url","concat","headers","Content-Type","form","user_id","cookie","load","email","request","error","response","body","Error","trip_id","replace","history","push","bind","json","setState","data","_this2","renderTrips","map","trip","react_default","a","createElement","className","trip_name","href","aria-label","aria-hidden","trip_date","onClick","viewTrip","_id","deleteTrip","newTripCard","createNewTrip","qs","remove","_this3","menu","es_menu","Item","es_button","logout","role","alt","src","dropdown","overlay","React","Component","withRouter","Spotifunk","isPlaylistClicked","isTopTenClicked","length","text","possible","i","charAt","Math","floor","random","generateRandomString","window","open","querystring","stringify","response_type","client_id","scope","redirect_uri","queryRefreshToken","parse","location","search","undefined","refreshToken","Postman-Token","cache-control","finalPlaylist","renderedSongs","embed_url","playlist_id","title","width","height","frameBorder","allowTransparency","allow","renderedPlaylist","playlist","card","type","getTopTenSongs","roadTripMe","login","Panel","Collapse","Steps","isStepsShowing","divStyle","position","left","bottom","cardStyle","steps","routes","distance","duration","route","leg","legs","round","turns","turn","instructions","console","log","driving_result","renderedSteps","origin_div","origin","query","icon","current_route","renderedLegs","stop","header","end_address","start_address","renderTurns","allStops","collapse","destination_div","destination","distance_duration","calculate_distance_duration","style","renderSteps","showSteps","CheckboxGroup","Checkbox","Group","Option","Select","tripster_stops_1","label","tripster_stops_2","isEmpty","obj","hasOwnProperty","MapContainer","handleChangeOrigin","origin_address","handleSelectOrigin","geocodeByAddress","then","results","getLatLng","latLng","origin_obj","catch","handleChangeDestination","destination_address","handleSelectDestination","destination_obj","stops","addition_markers","sort_by","price","waypoints","waypoints_db_obj","pathname","split","parsedTrip","parseDBTrip","calculate_distance","e","waypoint","lat","parseFloat","lng","google","maps","LatLng","stopover","DirectionsService","optimizeWaypoints","travelMode","TravelMode","DRIVING","result","status","bounds","LatLngBounds","all_steps","overview_path","step","current_step_json","toJSON","extend","origin_lat","origin_lng","destination_lat","destination_lng","additional_markers","JSON","dist","onMouseover","marker","displayInfoWindow","image_url","coordinates","latitude","longitude","setWayPoint","infoWindow","visible","name","rating","phone","theme","twoToneColor","toConsumableArray","_this4","content","border","borderRadius","calendar","fullscreen","onChange","date","_d","toISOString","moment","input","borderRight","placeholder","event","target","popover","trigger","class","extra","saveTrip","react_places_autocomplete_dist_default","onSelect","_ref","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","description","_ref2","es_select","max","es_radio","buttonStyle","Button","components_Spotifunk","zoom","path","geodesic","strokeColor","strokeOpacity","strokeWeight","components_Steps","GoogleApiWrapper","apiKey","Home","isLoggedIn","userID","picture","resp","save","facebook_login_with_button_default","appId","autoLoad","fields","callback","responseFacebook","onFailure","Boolean","hostname","match","ReactDOM","render","react_router_dom","react_router","component","App","exact","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6fb04278.chunk.js","sourcesContent":["// var backendURL = \"http://localhost:8888\";\nvar backendURL = \"http://ec2-3-14-1-163.us-east-2.compute.amazonaws.com:8888\";\nexport {backendURL}\n","import React from \"react\";\nimport { withRouter } from 'react-router-dom';\nimport request from 'request';\nimport { Card, Button, Menu, Dropdown, Icon } from 'antd';\nimport \"../stylesheets/trips.css\"\nimport cookie from 'react-cookies'\nimport {backendURL} from \"../dependency\";\n\nexport class Trips extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            trips: []\n        }\n    }\n    createNewTrip(){\n        var options = {\n            method: 'POST',\n            url: `${backendURL}/new-trip`,\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            form: {\n                user_id: cookie.load(\"userID\"),\n                email: cookie.load(\"email\"),\n            }\n        };\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            const trip_id = (body.replace('\"', '')).replace('\"', '')\n            this.props.history.push(`/plan-trip/${trip_id}`)\n        }.bind(this));\n\n    }\n\n    deleteTrip(trip_id){\n        let options = {\n            method: 'POST',\n            url: `${backendURL}/delete-trip`,\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            form: {\n                user_id: cookie.load(\"userID\"),\n                email: cookie.load(\"email\"),\n                trip_id: trip_id,\n            },\n            json: true\n        };\n\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            this.setState({trips: body.data})\n        }.bind(this));\n    }\n    viewTrip(trip_id){\n        this.props.history.push(`/plan-trip/${trip_id}`)\n    }\n    renderTrips(){\n        const renderTrips = this.state.trips.map(trip => (\n            <div className=\"trip-item\">\n              <div className=\"card\">\n                <header className=\"card-header has-text-centered\">\n                  <p className=\"card-header-title is-size-5 has-text-weight-light\">\n                    {trip.trip_name}\n                  </p>\n                  <a href=\"\" className=\"card-header-icon\" aria-label=\"more options\">\n                    <span className=\"icon\">\n                      <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                  </a>\n                </header>\n                <div className=\"card-content\">\n                  <div className=\"content\">\n                    <p className=\"is-size-6 has-text-weight-light\">{trip.trip_date}</p>\n                  </div>\n                </div>\n                <footer className=\"card-footer\">\n                  <a href=\"\" className=\"card-footer-item\" onClick={() => this.viewTrip(trip._id)}>View Trip</a>\n                  <a href=\"\" className=\"card-footer-item\" onClick={() => this.deleteTrip(trip._id)}>Delete</a>\n                </footer>\n              </div>\n            </div>\n        ));\n        const newTripCard = (\n          <div className=\"trip-item\">\n            <div className=\"card\">\n              <header className=\"card-header has-text-centered\">\n                <p className=\"card-header-title is-size-5 has-text-weight-light\">\n                  Add a new trip!\n                </p>\n                <a href=\"\" className=\"card-header-icon\" aria-label=\"more options\">\n                    <span className=\"icon\">\n                      <i className=\"fas fa-angle-down\" aria-hidden=\"true\"></i>\n                    </span>\n                </a>\n              </header>\n              <div className=\"card-content\">\n                <div className=\"content\">\n                  <p className=\"is-size-6 has-text-weight-light\">+</p>\n                </div>\n              </div>\n              <footer className=\"card-footer\">\n                <a onClick={() => this.createNewTrip()} className=\"card-footer-item\">Click here to add a new trip!</a>\n              </footer>\n            </div>\n          </div>\n        )\n\n        renderTrips.push(newTripCard)\n        return renderTrips\n    }\n\n    componentDidMount(){\n        if (!cookie.load(\"isLoggedIn\")){\n            this.props.history.push(\"/\")\n        } else {\n            let options = {\n                method: 'GET',\n                url: `${backendURL}/view-trips`,\n                qs: {\n                    email: cookie.load(\"email\"),\n                    user_id: cookie.load(\"userID\")\n                },\n                json: true\n            };\n            request(options, function (error, response, body) {\n                if (error) throw new Error(error);\n                this.setState({trips: body.data})\n            }.bind(this));\n        }\n    }\n\n    logout(){\n        cookie.remove(\"isLoggedIn\")\n        cookie.remove(\"userID\")\n        cookie.remove(\"name\")\n        cookie.remove(\"email\")\n        cookie.remove(\"picture\")\n        this.props.history.push(\"/\")\n    }\n\n\n    render() {\n        const menu = (\n            <Menu>\n                <Menu.Item>\n                    <p>Email: {cookie.load(\"email\")}</p>\n                </Menu.Item>\n                <Menu.Item>\n                    <Button onClick={() => this.logout()}>Logout</Button>\n                </Menu.Item>\n            </Menu>\n        );\n        return (\n          <section className=\"hero is-light is-fullheight\">\n\n            <div className=\"hero-head\">\n\n              <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                <div className=\"navbar-brand\">\n                  <a className=\"navbar-item\">\n                      <img alt=\"\" src=\"https://github.com/lrisTech/Tripster/blob/master/tripster-react/src/images/tripster.png?raw=true\"/>\n                  </a>\n                </div>\n                <div className=\"navbar-menu\">\n\n                </div>\n                <div className=\"navbar-end\">\n                  <a className=\"navbar-item\">\n                    <Dropdown overlay={menu} >\n                        <img src={cookie.load(\"picture\")} alt=\"\"/>\n                    </Dropdown>\n                  </a>\n                </div>\n\n              </nav>\n\n            </div>\n\n            <div className=\"hero-body\">\n\n              <div className=\"trips-container\">\n                {this.renderTrips()}\n              </div>\n\n            </div>\n\n          </section>\n\n        );\n    }\n}\n\nexport default withRouter(Trips)\n","import React from \"react\";\nimport {Button, Card} from \"antd\";\nimport querystring from \"querystring\";\nimport {withRouter} from 'react-router-dom';\nimport request from 'request';\nimport cookie from \"react-cookies\";\nimport {backendURL} from \"../dependency\";\n\n\nexport class Spotifunk extends React.Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isPlaylistClicked: false,\n            isTopTenClicked: false\n        }\n    }\n    login() {\n        const generateRandomString = function (length) {\n            let text = '';\n            const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n            for (let i = 0; i < length; i += 1) {\n                text += possible.charAt(Math.floor(Math.random() * possible.length));\n            }\n            return text;\n        };\n\n        const state = generateRandomString(16);\n        const scope = 'user-read-private user-read-email playlist-read-private playlist-modify-private playlist-modify-public playlist-read-collaborative';\n        window.open(`https://accounts.spotify.com/authorize?${\n            querystring.stringify({\n                response_type: 'code',\n                client_id: '682367fe3a8a41a0b81f34dc5c6fe936',\n                scope,\n                redirect_uri: `${backendURL}/callback` ,\n                state})\n            })}`, '_self');\n    }\n    componentDidMount() {\n        const parsedQuery = querystring.parse(this.props.location.search);\n        const queryRefreshToken = parsedQuery['?refresh_token'];\n        if (queryRefreshToken !== undefined) {\n            // TODO: fix this\n            this.setState({'refreshToken':queryRefreshToken});\n        }\n    }\n\n    getTopTenSongs(){\n        var options = { method: 'GET',\n            json:true,\n            url: `${backendURL}/top-10`,\n            qs: { refreshToken: this.state.refreshToken },\n            headers:\n                { 'Postman-Token': '87b33f0a-d49f-42cc-b4f6-e8ec657df404',\n                    'cache-control': 'no-cache' } };\n\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n\n            let finalPlaylist;\n            if (this.state.isTopTenClicked){\n                this.setState({renderedSongs:\"\", isTopTenClicked: false})\n            } else {\n                let embed_url = `https://open.spotify.com/embed/user/${body.user_id}/playlist/${body.playlist_id}`\n                // src=\"https://open.spotify.com/embed/user/1215854297/playlist/0aAotlEvLxpi4QgWk97CZK\"\n                finalPlaylist = (\n                    <iframe title=\"playlist\" src={embed_url} width=\"300\" height=\"380\"\n                            frameBorder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>\n                )\n                this.setState({renderedSongs:finalPlaylist, isTopTenClicked: true})\n            }\n\n\n        }.bind(this));\n\n    }\n\n\n    roadTripMe(){\n        if (this.state.isPlaylistClicked){\n            this.setState({renderedPlaylist:\"\", isPlaylistClicked: false})\n        } else {\n            let playlist = (\n                <iframe title=\"public-playlist\" src=\"https://open.spotify.com/embed/user/1215854297/playlist/0aAotlEvLxpi4QgWk97CZK\" width=\"280\"\n                        height=\"380\" frameBorder=\"0\" allowTransparency=\"true\" allow=\"encrypted-media\"></iframe>)\n            this.setState({renderedPlaylist:playlist, isPlaylistClicked: true})\n        }\n\n\n    }\n\n    render() {\n        if (this.state.refreshToken) {\n            return (\n                <div>\n                    <Card>\n                        {this.state.renderedSongs}\n                        {this.state.renderedPlaylist}\n                        <Button type=\"primary\" onClick={() => this.getTopTenSongs()}>Top 10 Songs</Button>\n                        <Button type=\"primary\" onClick={() => this.roadTripMe()}>Road Trip Me</Button>\n                    </Card>\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    <Card>\n                        <Button type=\"primary\" onClick={() => this.login()}>Spotifunk</Button>\n                    </Card>\n\n                </div>\n            );\n        }\n    }\n}\n\nexport default withRouter(Spotifunk)\n","import React from \"react\";\nimport {Card, Button, Icon, Collapse} from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport '../stylesheets/steps.css'\nimport {backendURL} from \"../dependency\";\n\nconst Panel = Collapse.Panel;\n\nexport class Steps extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isStepsShowing: false,\n            divStyle: {'position': 'absolute', 'left': '0', 'bottom': '0', 'width': '60%'},\n            cardStyle: {'width': '50%'},\n            steps: []\n        }\n    }\n\n    calculate_distance_duration(routes){\n        let distance = 0\n        let duration = 0\n        for (let route in routes){\n            for (let leg in routes[route].legs){\n                distance += routes[route].legs[leg].distance.value\n                duration += routes[route].legs[leg].duration.value\n            }\n        }\n        return {'duration': Math.round(duration*0.0166667), 'distance': Math.round(distance*0.000621371)}\n    }\n\n    showSteps(){\n        if (this.state.isStepsShowing){\n            this.setState({\n                isStepsShowing: false,\n                divStyle: {'position': 'absolute', 'left': '0', 'bottom': '0', 'width': '60%'},\n                cardStyle: {'width': '50%'},\n            })\n        } else {\n            this.setState({\n                isStepsShowing: true,\n                divStyle: {'left': '0', 'bottom': '0', 'width': '60%', 'height': '100%'},\n                cardStyle: {'width': '50%', 'height': '100%', },\n            })\n        }\n    }\n\n\n    renderTurns(turns){\n        const renderedTurns = turns.map((turn) =>\n            <div className={\"stop-div\"}>\n                <p className={\"stop-item-left\"}>{turn.distance.text}</p>\n                <p className={\"stop-item-right\"}>{turn.instructions.replace(/<[^>]+>/g, '')}</p>\n            </div>\n        );\n        return renderedTurns\n    }\n\n    renderSteps(){\n        console.log(this.props.driving_result)\n        let renderedSteps = [];\n        let origin_div = (\n            <div className={\"stop-div\"} key={this.props.driving_result.request.origin.query}>\n                <Icon type=\"star\" className={\"stop-item-left\"}/>\n                <p className={\"stop-item-right\"}>{this.props.driving_result.request.origin.query}</p>\n            </div>\n\n\n        );\n        renderedSteps.push(origin_div)\n\n        const current_route = this.props.driving_result.routes[0].legs;\n\n        let renderedLegs = []\n        for (let leg in current_route){\n            console.log(current_route[leg])\n            let stop = (\n                <Panel header={current_route[leg].end_address} key={current_route[leg].end_address + current_route[leg].start_address}>\n                    {this.renderTurns(current_route[leg].steps)}\n                </Panel>\n            )\n            renderedLegs.push(stop)\n        }\n        let allStops = (\n            <Collapse>\n                {renderedLegs}\n            </Collapse>\n        )\n        renderedSteps.push(allStops)\n        let destination_div = (\n            <div className={\"stop-div\"} key={this.props.driving_result.request.destination.query}>\n                <Icon type=\"star\" className={\"stop-item-left\"}/>\n                <p className={\"stop-item-right\"}>{this.props.driving_result.request.destination.query}</p>\n            </div>\n\n        )\n        renderedSteps.push(destination_div)\n\n        // renderedSteps.push(driving_result.routes.map((step) =>\n        //     <p>{\"TEST\"}</p>\n        // ));\n\n        return renderedSteps\n    }\n\n    render() {\n        let distance_duration = this.calculate_distance_duration(this.props.driving_result.routes)\n        return (\n            <div style={this.state.divStyle}>\n                <Card style={this.state.cardStyle} className={\"steps-card\"}>\n                    <p>~{distance_duration.duration} min ({distance_duration.distance} mi)</p>\n                    {this.state.isStepsShowing ? this.renderSteps() : \"\"}\n                    <Button onClick={() => this.showSteps()}>Steps</Button>\n                </Card>\n            </div>\n\n        );\n    }\n}\n\nexport default withRouter(Steps)\n","import {Map, Marker, GoogleApiWrapper, Polyline, InfoWindow} from 'google-maps-react';\nimport React from 'react'\nimport PlacesAutocomplete from 'react-places-autocomplete';\nimport 'antd/dist/antd.css';\nimport { Input, Button, Radio, Card, Checkbox, Select, Calendar, Popover, Icon} from 'antd';\nimport { withRouter } from 'react-router-dom';\nimport {geocodeByAddress, getLatLng} from 'react-places-autocomplete';\nimport '../stylesheets/App.css'\nimport './Spotifunk'\nimport request from 'request'\nimport Spotifunk from \"./Spotifunk\";\nimport Steps from \"./Steps\";\nimport cookie from \"react-cookies\";\nimport moment from 'moment';\nimport {backendURL} from \"../dependency\";\n\nconst CheckboxGroup = Checkbox.Group;\nconst Option = Select.Option;\nconst tripster_stops_1 = [\n    { label: 'Active Life', value: 'Active Life'},\n    { label: 'Entertainment', value: 'Arts & Entertainment' },\n];\nconst tripster_stops_2 = [\n    { label: 'Nightlife', value: 'Nightlife' },\n    { label: 'Restaurants', value: 'Restaurants' },\n];\nfunction isEmpty(obj) {\n    for(var key in obj) {\n        if(obj.hasOwnProperty(key))\n            return false;\n    }\n    return true;\n}\n\nexport class MapContainer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            trip_name: '',\n            origin_address: '',\n            destination_address: '',\n            origin_obj: {},\n            destination_obj: {},\n            stops: [],\n            addition_markers: undefined,\n            sort_by: 'best_match',\n            price: \"1\",\n            waypoints: [],\n            waypoints_db_obj: [],\n            driving_result: {},\n            trip_id: '',\n            trip_date: undefined,\n\n        };\n    }\n    componentDidMount(){\n        const trip_id = this.props.history.location.pathname.split(\"/\")[2];\n        console.log(trip_id)\n        var options = {\n            method: 'GET',\n            url: `${backendURL}/view-trip`,\n            qs: {\n                email: cookie.load('email'),\n                user_id: cookie.load('userID'),\n                trip_id: trip_id\n            },\n            json: true\n        };\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n            let parsedTrip = {};\n            try{\n                parsedTrip = this.parseDBTrip(body);\n                parsedTrip.trip_id = trip_id;\n                this.setState(parsedTrip);\n                this.calculate_distance()\n            } catch(e){\n                parsedTrip.trip_id = trip_id;\n                this.setState(parsedTrip);\n            }\n\n        }.bind(this));\n    }\n\n\n    parseDBTrip(body){\n        let parsedTrip = body;\n        parsedTrip.origin_obj.lat = parseFloat(parsedTrip.origin_obj.lat);\n        parsedTrip.origin_obj.lng = parseFloat(parsedTrip.origin_obj.lng);\n        parsedTrip.destination_obj.lat = parseFloat(parsedTrip.destination_obj.lat);\n        parsedTrip.destination_obj.lng = parseFloat(parsedTrip.destination_obj.lng);\n        parsedTrip.waypoints_db_obj = body.waypoints;\n        delete parsedTrip.waypoints;\n        parsedTrip.waypoints = [];\n        for (let waypoint in parsedTrip.waypoints_db_obj){\n            parsedTrip.waypoints_db_obj[waypoint] = {\n                lat: parseFloat(parsedTrip.waypoints_db_obj[waypoint].lat),\n                lng: parseFloat(parsedTrip.waypoints_db_obj[waypoint].lng)\n            }\n            parsedTrip.waypoints[waypoint] = {\n                location: new this.props.google.maps.LatLng(parsedTrip.waypoints_db_obj[waypoint].lat,parsedTrip.waypoints_db_obj[waypoint].lng),\n                stopover: true\n            };\n\n        }\n        return parsedTrip\n    }\n\n    handleChangeOrigin = origin_address => {\n        this.setState({\n            origin_address\n        });\n    };\n\n    handleSelectOrigin = origin_address => {\n        geocodeByAddress(origin_address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => this.setState({origin_obj : latLng}))\n            .catch(error => console.error('Error', error));\n        this.setState({origin_address})\n    };\n\n    handleChangeDestination = destination_address => {\n        this.setState({\n            destination_address\n        });\n    };\n\n    handleSelectDestination = destination_address => {\n        geocodeByAddress(destination_address)\n            .then(results => getLatLng(results[0]))\n            .then(latLng => this.setState({destination_obj: latLng}))\n            .catch(error => console.error('Error', error));\n        this.setState({destination_address})\n    };\n\n    calculate_distance() {\n        if (isEmpty(this.state.origin_obj) || isEmpty(this.state.destination_obj)){\n            return\n        }\n        const DirectionsService = new this.props.google.maps.DirectionsService();\n        DirectionsService.route({\n            origin: this.state.origin_address,\n            destination: this.state.destination_address,\n            waypoints: this.state.waypoints,\n            optimizeWaypoints: true,\n            travelMode: this.props.google.maps.TravelMode.DRIVING,\n        }, (result, status) => {\n\n            var bounds = new this.props.google.maps.LatLngBounds();\n            try{\n                const all_steps = (result.routes[0].overview_path)\n                for (let step in all_steps){\n                    let current_step_json = all_steps[step].toJSON()\n                    bounds.extend(current_step_json);\n                }\n                this.setState({'steps': result.routes[0].overview_path, bounds, driving_result: result})\n            } catch (e){\n                console.log(\"ERR\")\n            }\n        });\n\n\n        var options = { method: 'GET',\n            url: `${backendURL}/calculate-distance`,\n            qs: {\n                origin_lat: this.state.origin_obj.lat,\n                origin_lng: this.state.origin_obj.lng,\n                destination_lat: this.state.destination_obj.lat,\n                destination_lng: this.state.destination_obj.lng,\n                sort_by: this.state.sort_by,\n                price: this.state.price,\n                stops: this.state.stops\n            },\n            headers:\n                { 'Postman-Token': '172aa67b-54c6-4116-9000-9a22e9480045',\n                    'cache-control': 'no-cache' } };\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n\n            var json = body;\n            var json_stops = JSON.parse(json).stops;\n\n            const additional_markers = json_stops.map((stop) =>\n                <Marker\n                    onMouseover={(props, marker, e) => this.displayInfoWindow(props, marker, e)}\n                    stop={stop}\n                    key={stop.image_url}\n                    position={{lat: stop.coordinates.latitude, lng: stop.coordinates.longitude}}\n                    onClick={() => this.setWayPoint(stop.coordinates.latitude, stop.coordinates.longitude)}\n                />\n            );\n            this.setState({additional_markers})\n\n        }.bind(this));\n    }\n\n    displayInfoWindow(props, marker, e) {\n        const infoWindow = (\n            <InfoWindow\n                marker={marker}\n                visible={true} >\n                <div>\n                    <h3><a href={props.stop.url}>{props.stop.name}</a></h3>\n                    <img src={props.stop.image_url} alt=\"\" height=\"20%\" width=\"20%\" />\n                    <p>Rating: {props.stop.rating}/5.0</p>\n                    <p>{props.stop.phone}</p>\n\n                    <Icon type=\"delete\" theme=\"twoTone\" twoToneColor=\"#eb2f96\" onClick={() => console.log(\"DELETE STOP\")}/>\n                </div>\n            </InfoWindow>\n        );\n        this.setState({infoWindow})\n    }\n\n    setWayPoint(lat, lng){\n        this.setState({waypoints:[...this.state.waypoints, {\n                location: new this.props.google.maps.LatLng(lat,lng),\n                stopover: true\n            }], waypoints_db_obj:[...this.state.waypoints_db_obj, {\n                lat,\n                lng\n            }]});\n        this.calculate_distance()\n    }\n\n\n\n    saveTrip(){\n        const trip = {\n            trip_name: this.state.trip_name,\n            origin_address: this.state.origin_address,\n            destination_address: this.state.destination_address,\n            origin_obj: this.state.origin_obj,\n            destination_obj: this.state.destination_obj,\n            trip_date: this.state.trip_date,\n            price: this.state.price,\n            sort_by: this.state.sort_by,\n            stops: this.state.stops,\n            waypoints: this.state.waypoints_db_obj,\n        };\n\n        let options = {\n            method: 'POST',\n            url: `${backendURL}/save-trip`,\n            qs: { trip_id: this.state.trip_id, email: cookie.load(\"email\"), user_id: cookie.load(\"userID\")},\n            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            form: trip\n        };\n\n        request(options, function (error, response, body) {\n            if (error) throw new Error(error);\n\n            console.log(body);\n        });\n    }\n\n    render() {\n        console.log(\"STATE\", this.state)\n        const content = (\n            <div style={{ width: 300, border: '1px solid #d9d9d9', borderRadius: 4 }}>\n                <Calendar\n                    fullscreen={false}\n                    onChange={(date) => this.setState({trip_date: date._d.toISOString()})}\n                    value={this.state.trip_date ? moment(this.state.trip_date) : moment(\"2019-04-11T15:13:58.867Z\")}\n                />\n            </div>\n        )\n        return (\n\n            <div>\n                <Input style={{\"width\": \"90%\", \"borderRight\": \"10px\"}} placeholder={\"Enter a name of your trip\"} value={this.state.trip_name} onChange={(event) => this.setState({trip_name: event.target.value})}/>\n                <Popover content={content} title=\"Travel Date\" trigger=\"click\">\n                    <Icon type=\"calendar\" />\n                </Popover>\n            <div className=\"flex-container\">\n\n\n                <div className=\"flex-container-div-left\">\n\n\n                    <Card class=\"is-size-1\"\n                        title=\"Tripster Stops\"\n                        extra={<Icon type=\"save\" theme=\"twoTone\"onClick={() => this.saveTrip()}/>}\n                    >\n                        <PlacesAutocomplete\n                            value={this.state.origin_address}\n                            onChange={this.handleChangeOrigin}\n                            onSelect={this.handleSelectOrigin}\n                        >\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                <div>\n                                    <Input\n                                        {...getInputProps({\n                                            placeholder: 'Origin',\n                                            className: 'location-search-input',\n                                        })}\n                                    />\n                                    <div className=\"autocomplete-dropdown-container\">\n                                        {loading && <div>Loading...</div>}\n                                        {suggestions.map(suggestion => {\n                                            const className = suggestion.active\n                                                ? 'suggestion-item--active'\n                                                : 'suggestion-item';\n                                            // inline style for demonstration purpose\n                                            const style = suggestion.active\n                                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                            return (\n                                                <div\n                                                    {...getSuggestionItemProps(suggestion, {\n                                                        className,\n                                                        style,\n                                                    })}\n                                                >\n                                                    <span>{suggestion.description}</span>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            )}\n                        </PlacesAutocomplete>\n\n                        <PlacesAutocomplete\n                            value={this.state.destination_address}\n                            onChange={this.handleChangeDestination}\n                            onSelect={this.handleSelectDestination}\n                        >\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                                <div>\n                                    <Input\n                                        {...getInputProps({\n                                            placeholder: 'Destination',\n                                            className: 'location-search-input',\n                                        })}\n                                    />\n                                    <div className=\"autocomplete-dropdown-container\">\n                                        {loading && <div>Loading...</div>}\n                                        {suggestions.map(suggestion => {\n                                            const className = suggestion.active\n                                                ? 'suggestion-item--active'\n                                                : 'suggestion-item';\n                                            // inline style for demonstration purpose\n                                            const style = suggestion.active\n                                                ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                                : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                            return (\n                                                <div\n                                                    {...getSuggestionItemProps(suggestion, {\n                                                        className,\n                                                        style,\n                                                    })}\n                                                >\n                                                    <span>{suggestion.description}</span>\n                                                </div>\n                                            );\n                                        })}\n                                    </div>\n                                </div>\n                            )}\n                        </PlacesAutocomplete>\n                        <br />\n\n                        <div>\n                            <CheckboxGroup\n                                options={tripster_stops_1}\n                                value={this.state.stops}\n                                onChange={stops => this.setState({stops})}\n                            />\n                            <br/><br/>\n                            <CheckboxGroup\n                                options={tripster_stops_2}\n                                value={this.state.stops}\n                                onChange={stops => this.setState({stops})}\n                            />\n                        </div>\n                        <br/>\n                        <p className={\"sort-by\"}>Sort By: </p>\n                        <Select value={this.state.sort_by} style={{width: 150}} max={51} onChange={(sort_by) => this.setState({sort_by})}>\n                            <Option value=\"best_match\" >Best Match</Option>\n                            <Option value=\"rating\">Rating</Option>\n                            <Option value=\"review_count\">Review Count</Option>\n                            <Option value=\"distance\">Distance</Option>\n                        </Select>\n                        <br/><br/>\n\n                        <Radio.Group value={this.state.price} buttonStyle=\"solid\" onChange={price => this.setState({price: price.target.value})}>\n                            <Radio.Button value=\"1\">$</Radio.Button>\n                            <Radio.Button value=\"2\">$$</Radio.Button>\n                            <Radio.Button value=\"3\">$$$</Radio.Button>\n                            <Radio.Button value=\"4\">$$$$</Radio.Button>\n                        </Radio.Group>\n\n                        <p></p>\n\n                        <Button onClick={() => this.calculate_distance()}>Calculate</Button>\n\n                    </Card>\n\n                        <Spotifunk/>\n\n                </div>\n\n                <div className=\"flex-container-div-right\">\n\n                    <Map className=\"googlemaps\" google={this.props.google} zoom={5} bounds={this.state.bounds}>\n                        <Marker\n                            position={{lat: this.state.origin_obj.lat, lng: this.state.origin_obj.lng}} />\n                        <Marker\n                            position={{lat: this.state.destination_obj.lat, lng: this.state.destination_obj.lng}} />\n                        {this.state.additional_markers}\n                        <Polyline\n                            path={this.state.steps}\n                            geodesic={false}\n                            strokeColor=\"#0000FF\"\n                            strokeOpacity={3}\n                            strokeWeight={8}\n                        />\n                        {this.state.infoWindow}\n\n                    </Map>\n                    <Steps driving_result={this.state.driving_result}/>\n\n                </div>\n\n\n            </div>\n            </div>\n\n\n        );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: (\"AIzaSyChbG4vc4a01alWP7RYrMvWd911uhGzOdo\")\n})(withRouter(MapContainer))\n","import React from \"react\";\nimport FacebookLogin from 'react-facebook-login';\nimport { withRouter } from 'react-router-dom';\nimport cookie from 'react-cookies'\nimport request from 'request'\nimport {backendURL} from \"../dependency\";\n\nexport class Home extends React.Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            isLoggedIn: false,\n            userID: '',\n            name: '',\n            email: '',\n            picture: ''\n        }\n    }\n\n\n\n    responseFacebook(response) {\n        var options = { method: 'POST',\n            url: `${backendURL}/authenticate`,\n            headers:\n                { 'Content-Type': 'application/x-www-form-urlencoded' },\n            form:\n                { email: response.email,\n                    name: response.name,\n                    picture: response.picture.data.url,\n                    user_id: response.userID\n                } };\n\n        request(options, function (error, resp, body) {\n            cookie.save('isLoggedIn', true)\n            cookie.save('userID', response.userID)\n            cookie.save('name', response.name)\n            cookie.save('email', response.email)\n            cookie.save('picture', response.picture.data.url)\n            this.setState({\n                isLoggedIn: true,\n                userID: response.userID,\n                name: response.name,\n                email: response.email,\n                picture: response.picture.data.url\n            });\n            this.props.history.push('/trips');;\n        }.bind(this));\n\n    }\n\n    componentDidMount(){\n        if(cookie.load('isLoggedIn')){\n            this.props.history.push('/trips');\n        }\n    }\n\n    render() {\n        return (\n            <section class=\"hero is-fullheight\">\n                <div class=\"hero-head\">\n\n                    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n                        <div className=\"navbar-brand\">\n                            <a className=\"navbar-item\">\n                                <img alt=\"\" src=\"https://github.com/lrisTech/Tripster/blob/master/tripster-react/src/images/tripster.png?raw=true\"/>\n\n                            </a>\n                        </div>\n                        <div className=\"navbar-menu\">\n\n                        </div>\n                        <div className=\"navbar-end\">\n                            <div className=\"navbar-item\">\n                                <div className=\"buttons\">\n                                    <a className=\"button is-link\">\n                                        <strong>Sign up</strong>\n                                    </a>\n                                    <a className=\"button is-light\">\n                                        Log in\n                                    </a>\n                                </div>\n                            </div>\n                        </div>\n\n                    </nav>\n\n                </div>\n\n\n\n                <div class=\"hero-body\">\n\n                    <div className=\"column is-6 is-offset-1 has-text-left\">\n                        <h1 className=\"title has-text-weight-bold\">\n                            Welcome to Tripster\n                        </h1>\n                        <p>\n\n                        </p>\n                        <p class=\"subtitle is-5\">\n                            Tripster is a web-application that allows you to find fun places during your road trip. We use Yelp's API to give you the best possible options to visit.\n                        </p>\n                        <a>\n                            <FacebookLogin\n                              appId=\"242487039919018\"\n                              autoLoad={false}\n                              fields=\"name,email,picture\"\n                              callback={response => this.responseFacebook(response)}\n                              onFailure={() => this.props.history.push(\"/\")}\n                            />\n                        </a>\n                    </div>\n\n                    <div class=\"column is-4\">\n                        <h1 class=\"has-text-centered\">\n                            <img alt=\"\" src=\"https://images-na.ssl-images-amazon.com/images/I/61m0oPPL%2BKL._SX466_.jpg\"/>\n                        </h1>\n                    </div>\n\n\n                </div>\n\n\n            </section>\n        );\n    }\n}\n\nexport default withRouter(Home)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport Trips from './components/Trips';\nimport App from './components/App';\nimport Home from './components/Home';\nimport { Route, Switch, BrowserRouter} from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route path=\"/plan-trip/:trip_id\" component={App} />\n            <Route exact path=\"/trips\" component={Trips} />\n            <Route path=\"/\" component={Home} />\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}